{"version":3,"sources":["api.ts","components/Loader/Loader.tsx","components/PersonLink.tsx","components/TablePage.tsx","components/PeoplePage.tsx","components/HomePage.tsx","App.tsx","index.tsx"],"names":["getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","className","PersonLink","person","to","slug","cn","sex","name","TablePage","people","useParams","getPersonByName","find","pers","useEffect","selectedPerson","document","querySelector","scrollIntoView","block","behavior","window","scrollTo","top","map","mother","motherName","undefined","father","fatherName","born","died","PeoplePage","useState","setPeople","isLoading","setIsLoading","isLoadingError","setIsLoadingError","catch","finally","length","HomePage","linkClass","isActive","App","role","index","element","path","replace","createRoot","getElementById","render"],"mappings":"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","file":"static/js/main.4ec1fcfe.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => (\n  <Link\n    to={`../${person.slug}`}\n    className={cn({\n      'has-text-danger': person.sex === 'f',\n    })}\n  >\n    {person.name}\n  </Link>\n);\n","import { useEffect } from 'react';\nimport cn from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const TablePage: React.FC<Props> = ({ people }) => {\n  const { slug } = useParams();\n\n  function getPersonByName(name: string) {\n    return people.find(pers => pers.name === name);\n  }\n\n  useEffect(() => {\n    const selectedPerson = document.querySelector('.has-background-warning');\n\n    if (selectedPerson) {\n      selectedPerson.scrollIntoView({\n        block: 'center',\n        behavior: 'smooth',\n      });\n    } else {\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    }\n  }, [slug]);\n\n  return (\n    <>\n      <table\n        data-cy=\"peopleTable\"\n        className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n      >\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Sex</th>\n            <th>Born</th>\n            <th>Died</th>\n            <th>Mother</th>\n            <th>Father</th>\n          </tr>\n        </thead>\n\n        {people.map(person => {\n          const mother = person.motherName\n            ? getPersonByName(person.motherName)\n            : undefined;\n          const father = person.fatherName\n            ? getPersonByName(person.fatherName)\n            : undefined;\n\n          return (\n            <tbody>\n              <tr\n                key={person.slug}\n                data-cy=\"person\"\n                className={cn({\n                  'has-background-warning': person.slug === slug,\n                })}\n              >\n                <td>\n                  <PersonLink person={person} />\n                </td>\n                <td>{person.sex}</td>\n                <td>{person.born}</td>\n                <td>{person.died}</td>\n                <td>\n                  {(person.motherName\n                    && (mother ? (\n                      <PersonLink person={mother} />\n                    ) : (\n                      person.motherName\n                    )))\n                    || '-'}\n                </td>\n                <td>\n                  {(person.fatherName\n                    && (father ? (\n                      <PersonLink person={father} />\n                    ) : (\n                      person.fatherName\n                    )))\n                    || '-'}\n                </td>\n              </tr>\n            </tbody>\n          );\n        })}\n      </table>\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { Loader } from './Loader';\nimport { TablePage } from './TablePage';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isLoadingError, setIsLoadingError] = useState(false);\n\n  useEffect(() => {\n    getPeople()\n      .then(setPeople)\n      .catch(() => setIsLoadingError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          <>\n            {isLoadingError ? (\n              <p\n                data-cy=\"peopleLoadingError\"\n                className=\"has-text-danger\"\n              >\n                Something went wrong\n              </p>\n            ) : (\n              <>\n                {people.length ? (\n                  <TablePage people={people} />\n                ) : (\n                  <p data-cy=\"noPeopleMessage\">\n                    There are no people on the server\n                  </p>\n                )}\n              </>\n            )}\n          </>\n        </div>\n      </div>\n    </>\n  );\n};\n","export const HomePage = () => {\n  return (<h1 className=\"title\">Home Page</h1>);\n};\n","import {\n  Navigate, NavLink, Route, Routes,\n} from 'react-router-dom';\nimport cn from 'classnames';\n\nimport './App.scss';\nimport { PeoplePage } from './components/PeoplePage';\nimport { HomePage } from './components/HomePage';\n\nconst linkClass = ({ isActive }: { isActive: boolean }) => cn(\n  'navbar-item', { 'has-background-grey-lighter': isActive },\n);\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={linkClass}\n          >\n            Home\n          </NavLink>\n          <NavLink\n            className={linkClass}\n            to=\"people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route\n            index\n            element={<HomePage />}\n          />\n          <Route path=\"people\">\n            <Route\n              path=\":slug?\"\n              element={<PeoplePage />}\n            />\n          </Route>\n\n          <Route\n            path=\"home\"\n            element={(\n              <Navigate\n                to=\"/\"\n                replace\n              />\n            )}\n          />\n          <Route\n            path=\"*\"\n            element={<h1 className=\"title\">Page not found</h1>}\n          />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}